<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Default ruleset used by the CodeClimate Engine for Salesforce.com Apex" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
   <description>Default ruleset used by the Code Climate Engine for Salesforce.com Apex</description>

   <!-- COMPLEXITY -->
   <rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="1000" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/design.xml/ExcessiveParameterList" message="Avoid long parameter lists">
      <priority>3</priority>
      <properties>
         <property name="minimum" value="6" />
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Complexity" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <!-- PERFORMANCE -->
   <rule ref="category/apex/performance.xml/AvoidSoqlInLoops" message="Avoid Soql queries inside loops">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Performance" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/performance.xml/AvoidSoslInLoops" message="Avoid Sosl queries inside loops">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Performance" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/performance.xml/AvoidDmlStatementsInLoops" message="Avoid DML Statements inside loops">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Performance" />
         <property name="cc_remediation_points_multiplier" value="150" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security"/>
         <property name="cc_remediation_points_multiplier" value="20"/>
         <property name="cc_block_highlighting" value="false"/>
      </properties>
   </rule>

   <!-- NAMING -->
   <rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>

   <!-- TESTS -->
   <rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Bug Risk" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Bug Risk" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>

   <!-- SECURITY -->
   <rule ref="category/apex/security.xml/ApexSharingViolations" message="Apex classes should declare a sharing model if DML or SOQL is used">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexCSRF" message="Avoid making DML operations in Apex class constructor/init method">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="100" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="20" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="20" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="20" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Security" />
         <property name="cc_remediation_points_multiplier" value="50" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>

   <!-- BRACES -->
   <rule ref="category/apex/codestyle.xml/WhileLoopsMustUseBraces" message="Avoid using 'while' statements without curly braces">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/codestyle.xml/IfElseStmtsMustUseBraces" message="Avoid using 'if...else' statements without curly braces">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
         </properties>
   </rule>
   <rule ref="category/apex/codestyle.xml/ForLoopsMustUseBraces" message="Avoid using 'for' statements without curly braces">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>

   <!-- EMPTY -->
   <rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
         </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
         </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
   <rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements.">
      <priority>3</priority>
      <properties>
         <!-- relevant for Code Climate output only -->
         <property name="cc_categories" value="Style" />
         <property name="cc_remediation_points_multiplier" value="5" />
         <property name="cc_block_highlighting" value="false" />
      </properties>
   </rule>
</ruleset>